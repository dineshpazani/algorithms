
#Angular life cycle hook :

ngOnChanges()
ngOnInit()
ngDoCheck()
ngAfterContentInit()
ngAfterContentChecked()
ngAfterViewInit()
ngAfterViewChecked()
ngOnDestroy()

#Life Cycle of Angular:
    Create
    Render
    Create and render children
    Check for bound data changes and re-render
    Destroy
	
# Double curly brackets:
double curly brackets like {{}} are used form data interpolation in Angular5

#Type of decorators:
Class Decorators
Method
Property
Paramters

#Type of Injections:
@Inject() - is a manual mechanism for letting Angular know that a parameter must be injected
@Injectable() lets Angular know that a class can be used with the dependency injector. 

#Transpiling
Traceur compiler is used for converting TypeScript to JavaScript 

#Component vs Directives:
Components are proving proper view whereas Directives donâ€™t have

#Driectives
Component
structural Directives - DOM related operations
Attribute Directives - CSS related operations

@forRoot - egar loading to visible to all component
@forChild - egar loading for child component

#Compunt communication:
Passing the reference of one component to another
Communication through parent component
Communication through Service
https://medium.com/@mirokoczka/3-ways-to-communicate-between-angular-components-a1e3f3304ecb


#JIT and AOT
JIT - Just in time compile is at development
AOT - Ahead of time is at prod 

#Promise vs Observanles:

Promise - return single value and unable to cancel
Observanles - return stream of values and able to cancel it.
Rxjs, ES2016, Support for Map and filters

#Event Emitters:
 Event Emitter is one the class using to emit custom events.
 @output() somethingchanged = new EventEmitter();

#Dynamic Component
ComponentFactoryResolver

#ViewEncapsulation: 
View Encapsulation in Angular defines how the styles defined in the template affects the other parts of the application.
  Emulated: 0
  Native: 1
  None: 2
  ShadowDom: 3
  https://www.tektutorialshub.com/angular/angular-view-encapsulation/

#ShadowDom vs virtual DOM:

ShadowDom - The shadow DOM is a way of encapsulating the implementation of web components.
Virtual DOM - The virtual DOM is an in-memory representation of the real DOM.

#Form
Reactiveform (Model driven form)
Template driven form


#Decorators:
Decorators are functions that adds metadata to class members and functions. It was proposed in ES2016 and implemented in Typescript.
